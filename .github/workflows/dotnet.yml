name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: 8.0.205
  SOLUTION_PATH: "./src/eshop-microservices.sln"
  DOTNET_CONFIGURATION: "Release"

jobs:
  linux-build:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4

    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Depenndencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build Project
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore

  docker-build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        service:
            - { name: "Basket", context: "./src", dockerfile: "./Services/Basket/Basket.Api/Dockerfile" }
            - { name: "Catalog", context: "./src", dockerfile: "./Services/Catalog/Catalog.API/Dockerfile" }
            - { name: "Discount", context: "./src", dockerfile: ".Services/Discount/Discount.Grpc/Dockerfile" }
            - { name: "Microservice1", context: "./src", dockerfile: ".Services/Ordering/Ordering.API/Dockerfile" }

    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push ${{ matrix.service.name }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: false
        labels: ${{ github.sha }}
        platforms: linux/amd64

    
