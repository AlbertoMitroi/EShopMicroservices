name: .NET CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOTNET_VERSION: 8.0.205
  SOLUTION_PATH: "./src/eshop-microservices.sln"
  DOTNET_CONFIGURATION: "Release"
  TEST_VERBOSITY: "normal"
  TEST_COVERAGE_FORMAT: "xml"
  TEST_COVERAGE_FILE: "coverage.xml"
  TEST_COVERAGE_DIR: "./src/Tests/coverage"

jobs:
  linux-build:
    runs-on: ubuntu-24.04
    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4

    - name: Setup .NET ${{ env.DOTNET_VERSION }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore Depenndencies
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build Project
      run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore

  docker-build:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        service:
            - { name: "Basket", context: "./src", dockerfile: "./src/Services/Basket/Basket.Api/Dockerfile" }
            - { name: "Catalog", context: "./src", dockerfile: "./src/Services/Catalog/Catalog.API/Dockerfile" }
            - { name: "Discount", context: "./src", dockerfile: "./src/Services/Discount/Discount.Grpc/Dockerfile" }
            - { name: "Microservice1", context: "./src", dockerfile: "./src/Services/Ordering/Ordering.API/Dockerfile" }
    steps:
    - name: Checkout Repository Code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build ${{ matrix.service.name }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ matrix.service.context }}
        file: ${{ matrix.service.dockerfile }}
        push: false
        labels: ${{ github.sha }}
        platforms: linux/amd64

  run-unit-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        service:
            - { name: "Basket", test_project: "./src/Tests/Services/Basket/Basket.Api.UniTests/Basket.Api.UniTests.csproj" }
            - { name: "Basket", test_project: "./src/Tests/Services/Ordering/Ordering.Application.UnitTests/Ordering.Application.UnitTests.csproj" }
    needs:
      - linux-build
      - docker-build
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
        
      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}
  
      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore
  
      - name: Test
        run: dotnet test ${{ matrix.service.test_project }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-build --verbosity ${{ env.TEST_VERBOSITY }} --collect:"Code Coverage;Format=${{ env.TEST_COVERAGE_FORMAT }};CoverageFileName=${{ env.TEST_COVERAGE_FILE }}" --results-directory ${{ env.TEST_COVERAGE_DIR }}
  
  run-integration-tests:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        service:
            - { name: "Basket", test_project: "./src/Tests/Services/Basket/Basket.Api.IntegrationTests/Basket.Api.IntegrationTests.csproj" }
            - { name: "Basket", test_project: "./src/Tests/Services/Ordering/Ordering.Application.IntegrationTests/Ordering.Application.IntegrationTests.csproj" }
            - { name: "Basket", test_project: "./src/Tests/Services/Ordering/Ordering/Ordering.API.IntegrationTest/Ordering.API.IntegrationTest.csproj" }
    needs:
      - linux-build
      - docker-build
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v4

      - name: Setup .NET ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: Build
        run: dotnet build ${{ env.SOLUTION_PATH }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ matrix.service.test_project }} --configuration ${{ env.DOTNET_CONFIGURATION }} --no-build --verbosity ${{ env.TEST_VERBOSITY }} --collect:"Code Coverage;Format=${{ env.TEST_COVERAGE_FORMAT }};CoverageFileName=${{ env.TEST_COVERAGE_FILE }}" --results-directory ${{ env.TEST_COVERAGE_DIR }}
       