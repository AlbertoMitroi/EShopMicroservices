{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_app_basket_gwc_name": {
            "defaultValue": "app-basket-gwc",
            "type": "String"
        },
        "sites_app_webapp_gwc_name": {
            "defaultValue": "app-webapp-gwc",
            "type": "String"
        },
        "sites_app_catalog_gwc_name": {
            "defaultValue": "app-catalog-gwc",
            "type": "String"
        },
        "Redis_redis_test_gwc_name": {
            "defaultValue": "redis-test-gwc",
            "type": "String"
        },
        "sites_app_discount_gwc_name": {
            "defaultValue": "app-discount-gwc",
            "type": "String"
        },
        "sites_app_ordering_gwc_name": {
            "defaultValue": "app-ordering-gwc",
            "type": "String"
        },
        "Redis_redis_basketapp_gwc_name": {
            "defaultValue": "redis-basketapp-gwc",
            "type": "String"
        },
        "sites_app_yarpapigateway_gwc_name": {
            "defaultValue": "app-yarpapigateway-gwc",
            "type": "String"
        },
        "storageAccounts_abtstoragegwc_name": {
            "defaultValue": "abtstoragegwc",
            "type": "String"
        },
        "serverfarms_asp_eshopmicroervices_gwc_001_name": {
            "defaultValue": "asp-eshopmicroervices-gwc-001",
            "type": "String"
        },
        "privateEndpoints_privateendpoint_redis_name": {
            "defaultValue": "privateendpoint-redis",
            "type": "String"
        },
        "Redis_redis_eshopmicroservices_basket_gwc_name": {
            "defaultValue": "redis-eshopmicroservices-basket-gwc",
            "type": "String"
        },
        "components_appi_eshopmicroservices_gwc_name": {
            "defaultValue": "appi-eshopmicroservices-gwc",
            "type": "String"
        },
        "flexibleServers_psql_catalog_gwc_name": {
            "defaultValue": "psql-catalog-gwc",
            "type": "String"
        },
        "privateEndpoints_privateendpoint_blob_storage_name": {
            "defaultValue": "privateendpoint-blob-storage",
            "type": "String"
        },
        "virtualNetworks_vnet_eshopmicroservices16_gwc_name": {
            "defaultValue": "vnet-eshopmicroservices16-gwc",
            "type": "String"
        },
        "actionGroups_Application_Insights_Smart_Detection_name": {
            "defaultValue": "Application Insights Smart Detection",
            "type": "String"
        },
        "systemTopics_abtstoragegwc_3093c45d_8dba_4b22_9432_0e1627fca917_name": {
            "defaultValue": "abtstoragegwc-3093c45d-8dba-4b22-9432-0e1627fca917",
            "type": "String"
        },
        "privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name": {
            "defaultValue": "psql-catalog-gwc.private.postgres.database.azure.com",
            "type": "String"
        },
        "workspaces_DefaultWorkspace_a84ed401_100e_4f5e_9462_a36e5a9ec843_DEWC_externalid": {
            "defaultValue": "/subscriptions/a84ed401-100e-4f5e-9462-a36e5a9ec843/resourceGroups/DefaultResourceGroup-DEWC/providers/Microsoft.OperationalInsights/workspaces/DefaultWorkspace-a84ed401-100e-4f5e-9462-a36e5a9ec843-DEWC",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('Redis_redis_basketapp_gwc_name')]",
            "location": "Germany West Central",
            "properties": {
                "redisVersion": "6.0",
                "sku": {
                    "name": "Basic",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Disabled",
                "redisConfiguration": {
                    "aad-enabled": "true",
                    "maxclients": "256",
                    "maxmemory-reserved": "30",
                    "maxfragmentationmemory-reserved": "30",
                    "maxmemory-delta": "30"
                },
                "updateChannel": "Stable",
                "disableAccessKeyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('Redis_redis_eshopmicroservices_basket_gwc_name')]",
            "location": "Germany West Central",
            "properties": {
                "redisVersion": "6.0",
                "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    "aad-enabled": "true",
                    "maxclients": "256",
                    "maxmemory-reserved": "30",
                    "maxfragmentationmemory-reserved": "30",
                    "maxmemory-delta": "30"
                },
                "updateChannel": "Stable",
                "zonalAllocationPolicy": "Automatic",
                "disableAccessKeyAuthentication": false
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2024-04-01-preview",
            "name": "[parameters('Redis_redis_test_gwc_name')]",
            "location": "Germany West Central",
            "properties": {
                "redisVersion": "6.0",
                "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    "aad-enabled": "true",
                    "maxclients": "256",
                    "maxmemory-reserved": "30",
                    "maxfragmentationmemory-reserved": "30",
                    "maxmemory-delta": "30"
                },
                "updateChannel": "Stable",
                "zonalAllocationPolicy": "Automatic",
                "disableAccessKeyAuthentication": false
            }
        },
        {
            "type": "microsoft.insights/actionGroups",
            "apiVersion": "2023-09-01-preview",
            "name": "[parameters('actionGroups_Application_Insights_Smart_Detection_name')]",
            "location": "Global",
            "properties": {
                "groupShortName": "SmartDetect",
                "enabled": true,
                "emailReceivers": [],
                "smsReceivers": [],
                "webhookReceivers": [],
                "eventHubReceivers": [],
                "itsmReceivers": [],
                "azureAppPushReceivers": [],
                "automationRunbookReceivers": [],
                "voiceReceivers": [],
                "logicAppReceivers": [],
                "azureFunctionReceivers": [],
                "armRoleReceivers": [
                    {
                        "name": "Monitoring Contributor",
                        "roleId": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
                        "useCommonAlertSchema": true
                    },
                    {
                        "name": "Monitoring Reader",
                        "roleId": "43d0d8ad-25c7-4714-9337-8ba259a9fe05",
                        "useCommonAlertSchema": true
                    }
                ]
            }
        },
        {
            "type": "microsoft.insights/components",
            "apiVersion": "2020-02-02",
            "name": "[parameters('components_appi_eshopmicroservices_gwc_name')]",
            "location": "germanywestcentral",
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web",
                "Flow_Type": "Redfield",
                "Request_Source": "IbizaWebAppExtensionCreate",
                "RetentionInDays": 90,
                "WorkspaceResourceId": "[parameters('workspaces_DefaultWorkspace_a84ed401_100e_4f5e_9462_a36e5a9ec843_DEWC_externalid')]",
                "IngestionMode": "LogAnalytics",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones",
            "apiVersion": "2024-06-01",
            "name": "[parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name')]",
            "location": "global",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name')]",
            "location": "germanywestcentral",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "encryption": {
                    "enabled": false,
                    "enforcement": "AllowUnencrypted"
                },
                "subnets": [
                    {
                        "name": "subnet-ordering",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-ordering')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.2.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-discount",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-discount')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.4.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-webapp",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-webapp')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.5.0/24"
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-webapp'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-yarpapigateway",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-yarpapigateway')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.6.0/24"
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-yarpapigateway'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-sql",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-sql')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.7.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-postgres-catalog",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-postgres-catalog')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.8.0/24"
                            ],
                            "serviceEndpoints": [
                                {
                                    "service": "Microsoft.Storage",
                                    "locations": [
                                        "germanywestcentral",
                                        "germanynorth"
                                    ]
                                }
                            ],
                            "delegations": [
                                {
                                    "name": "dlg-Microsoft.DBforPostgreSQL-flexibleServers",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-postgres-catalog'), '/delegations/dlg-Microsoft.DBforPostgreSQL-flexibleServers')]",
                                    "properties": {
                                        "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-catalog",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-catalog')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.3.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.0.0/24"
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "default2",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default2')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.9.0/24"
                            ],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    },
                    {
                        "name": "subnet-basket",
                        "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket')]",
                        "properties": {
                            "addressPrefixes": [
                                "10.0.1.0/24"
                            ],
                            "delegations": [
                                {
                                    "name": "delegation",
                                    "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket'), '/delegations/delegation')]",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverfarms"
                                    },
                                    "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                                }
                            ],
                            "privateEndpointNetworkPolicies": "Disabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[parameters('storageAccounts_abtstoragegwc_name')]",
            "location": "germanywestcentral",
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "properties": {
                "dnsEndpointType": "Standard",
                "defaultToOAuthAuthentication": false,
                "publicNetworkAccess": "Disabled",
                "allowCrossTenantReplication": false,
                "minimumTlsVersion": "TLS1_2",
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "resourceAccessRules": [
                        {
                            "tenantId": "b71ce7b3-423a-4d7e-a270-e0f7cf2345fe",
                            "resourceId": "/subscriptions/a84ed401-100e-4f5e-9462-a36e5a9ec843/providers/Microsoft.Security/datascanners/storageDataScanner"
                        }
                    ],
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "requireInfrastructureEncryption": false,
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[parameters('serverfarms_asp_eshopmicroervices_gwc_001_name')]",
            "location": "Germany West Central",
            "tags": {
                "Owner": "Alberto"
            },
            "sku": {
                "name": "S1",
                "tier": "Standard",
                "size": "S1",
                "family": "S",
                "capacity": 1
            },
            "kind": "linux",
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "freeOfferExpirationTime": "2024-12-22T11:40:00",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/Data Contributor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all -@dangerous +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_eshopmicroservices_basket_gwc_name'), '/Data Contributor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_eshopmicroservices_basket_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all -@dangerous +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_test_gwc_name'), '/Data Contributor')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_test_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all -@dangerous +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/Data Owner')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_eshopmicroservices_basket_gwc_name'), '/Data Owner')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_eshopmicroservices_basket_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_test_gwc_name'), '/Data Owner')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_test_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@all allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/Data Reader')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@read +@connection +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_eshopmicroservices_basket_gwc_name'), '/Data Reader')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_eshopmicroservices_basket_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@read +@connection +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicies",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_test_gwc_name'), '/Data Reader')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_test_gwc_name'))]"
            ],
            "properties": {
                "permissions": "+@read +@connection +cluster|info +cluster|nodes +cluster|slots allkeys"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicyAssignments",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/8a73c58f-8297-4625-ad04-dac63f4dc09e')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "accessPolicyName": "Data Contributor",
                "objectId": "8a73c58f-8297-4625-ad04-dac63f4dc09e",
                "objectIdAlias": "app-basket-gwc"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/accessPolicyAssignments",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/d45f9ddc-b20e-4db9-83bc-fe07a7d76053')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "accessPolicyName": "Data Owner",
                "objectId": "d45f9ddc-b20e-4db9-83bc-fe07a7d76053",
                "objectIdAlias": "Alberto Mitroi (Engineering)"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/firewallRules",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/myip')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "startIP": "82.77.66.43",
                "endIP": "82.77.66.43"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/firewallRules",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_eshopmicroservices_basket_gwc_name'), '/myip')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_eshopmicroservices_basket_gwc_name'))]"
            ],
            "properties": {
                "startIP": "165.225.201.143",
                "endIP": "165.225.201.143"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/firewallRules",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_eshopmicroservices_basket_gwc_name'), '/myip2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_eshopmicroservices_basket_gwc_name'))]"
            ],
            "properties": {
                "startIP": "82.77.66.43",
                "endIP": "82.77.66.43"
            }
        },
        {
            "type": "Microsoft.Cache/Redis/privateEndpointConnections",
            "apiVersion": "2024-04-01-preview",
            "name": "[concat(parameters('Redis_redis_basketapp_gwc_name'), '/privateendpoint-redis.32e3d785-3891-4540-a03a-f1916d6e83c2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionsRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/administrators",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/d45f9ddc-b20e-4db9-83bc-fe07a7d76053')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "principalType": "User",
                "principalName": "alberto.mitroi@softelligence.net",
                "tenantId": "b71ce7b3-423a-4d7e-a270-e0f7cf2345fe"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/advancedThreatProtectionSettings",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/Default')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "state": "Enabled"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/allow_in_place_tablespaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/allow_system_table_mods')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/application_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/archive_cleanup_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/archive_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "BlobLogUpload.sh %f %p",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/archive_library')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/archive_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "always",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/archive_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "300",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/array_nulls')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/authentication_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_analyze')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_format')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "text",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_nested_statements')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_settings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_triggers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_verbose')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.log_wal')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/auto_explain.sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1.0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_analyze_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_analyze_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "200000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_max_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_multixact_freeze_max_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "400000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_naptime')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "60",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_insert_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_insert_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_scale_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_vacuum_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/autovacuum_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure.accepted_password_auth_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "md5,scram-sha-256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure.enable_temp_tablespaces_on_local_ssd')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure.extensions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure.single_to_flex_migration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure_storage.allow_network_access')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure_storage.blob_block_size_mb')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure_storage.public_account_access')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/backend_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/backslash_quote')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "safe_encoding",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/backtrace_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bgwriter_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bgwriter_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bgwriter_lru_maxpages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bgwriter_lru_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bonjour')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bonjour_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/bytea_output')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "hex",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/check_function_bodies')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/checkpoint_completion_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/checkpoint_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/checkpoint_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "600",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/checkpoint_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/client_connection_check_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/client_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "UTF8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/client_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "notice",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cluster_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/commit_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/commit_siblings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/compute_query_id')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "auto",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/config_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/postgresql.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.bucket_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.enable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.factor_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.hash_entries_max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "500",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.reset_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.restore_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/connection_throttle.update_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/constraint_exclusion')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "partition",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cpu_index_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.005",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cpu_operator_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.0025",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cpu_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.01",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cron.database_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cron.log_run')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cron.log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cron.max_running_jobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/cursor_tuple_fraction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/data_checksums')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/data_directory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/data_directory_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0700",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/data_sync_retry')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/DateStyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "ISO, MDY",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/db_user_namespace')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/deadlock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_assertions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_discard_caches')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_parallel_query')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_pretty_print')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_print_parse')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_print_plan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/debug_print_rewritten')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_statistics_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_table_access_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "heap",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_tablespace')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_text_search_config')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "pg_catalog.english",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_toast_compression')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "pglz",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/default_transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/dynamic_library_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "$libdir",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/dynamic_shared_memory_type')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "posix",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/effective_cache_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "229376",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/effective_io_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_async_append')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_bitmapscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_gathermerge')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_hashagg')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_hashjoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_incremental_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_indexonlyscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_indexscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_material')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_memoize')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_mergejoin')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_nestloop')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_parallel_append')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_parallel_hash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_partition_pruning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_partitionwise_aggregate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_partitionwise_join')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_seqscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/enable_tidscan')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/escape_string_warning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/event_source')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "PostgreSQL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/exit_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/external_pid_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/extra_float_digits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/from_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/fsync')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/full_page_writes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_effort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_generations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_pool_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_seed')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_selection_bias')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/geqo_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "12",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/gin_fuzzy_search_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/gin_pending_list_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/hash_mem_multiplier')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/hba_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/pg_hba.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/hot_standby')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/hot_standby_feedback')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/huge_page_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/huge_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "try",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ident_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/pg/data/pg_ident.conf",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/idle_in_transaction_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/idle_session_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ignore_checksum_failure')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ignore_invalid_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ignore_system_indexes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/in_hot_standby')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/integer_datetimes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/intelligent_tuning')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/intelligent_tuning.metric_targets')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/IntervalStyle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "100000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_debugging_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_dump_bitcode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_expressions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_inline_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "500000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_optimize_above_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "500000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_profiling_support')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_provider')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "llvmjit",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/jit_tuple_deforming')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/join_collapse_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/krb_caseins_users')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/krb_server_keyfile')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lc_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "en_US.utf8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lc_monetary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "en_US.utf-8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lc_numeric')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "en_US.utf-8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lc_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "en_US.utf8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/listen_addresses')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "*",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lo_compat_privileges')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/local_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/lock_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_autovacuum_min_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "600000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_checkpoints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_destination')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "stderr",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_directory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_disconnections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_duration')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_error_verbosity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "default",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_executor_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_file_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0600",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_filename')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "postgresql-%Y-%m-%d_%H%M%S.log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_hostname')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_line_prefix')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "%t-%c-",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_lock_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_min_duration_sample')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_min_duration_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_min_error_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "error",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_min_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "warning",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_parameter_max_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_parameter_max_length_on_error')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_parser_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_planner_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_recovery_conflict_waits')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_replication_commands')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_rotation_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "60",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_rotation_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "102400",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_startup_progress_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_statement')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_statement_sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_statement_stats')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_temp_files')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_timezone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_transaction_sample_rate')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/log_truncate_on_rotation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/logfiles.download_enable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/logfiles.retention_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "3",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/logging_collector')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/logical_decoding_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "65536",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/maintenance_io_concurrency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/maintenance_work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "99328",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "50",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_files_per_process')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_function_args')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_identifier_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "63",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_index_keys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "32",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_logical_replication_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "4",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_parallel_apply_workers_per_subscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_parallel_maintenance_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_parallel_workers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_parallel_workers_per_gather')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_pred_locks_per_page')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_pred_locks_per_relation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_pred_locks_per_transaction')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_prepared_transactions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_replication_slots')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_slot_wal_keep_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_stack_depth')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_standby_archive_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_standby_streaming_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "30000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_sync_workers_per_subscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_wal_senders')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/max_worker_processes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/metrics.autovacuum_diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/metrics.collector_database_activity')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/metrics.pgbouncer_diagnostics')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/min_dynamic_shared_memory')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/min_parallel_index_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/min_parallel_table_scan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/min_wal_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "80",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/parallel_leader_participation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/parallel_setup_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/parallel_tuple_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0.1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/password_encryption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "scram-sha-256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_partman_bgw.analyze')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_partman_bgw.dbname')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_partman_bgw.interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "3600",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_partman_bgw.jobmon')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_partman_bgw.role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.interval_length_minutes')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "15",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.max_plan_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "7500",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.max_query_text_length')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "6000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.parameters_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "capture_parameterless_only",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.retention_period_in_days')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "7",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.store_query_plans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_qs.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_stat_statements.max')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_stat_statements.save')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_stat_statements.track')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pg_stat_statements.track_utility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_catalog')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_client')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_parameter')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_relation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.log_statement_once')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgaudit.role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pglogical.batch_inserts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pglogical.conflict_log_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pglogical.conflict_resolution')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "apply_remote",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pglogical.use_spi')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgms_stats.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgms_wait_sampling.history_period')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "100",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgms_wait_sampling.is_enabled_fs')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pgms_wait_sampling.query_capture_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/plan_cache_mode')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "auto",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/port')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5432",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/post_auth_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/postgis.gdal_enabled_drivers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "DISABLE_ALL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/pre_auth_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/primary_conninfo')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/primary_slot_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/quote_all_identifiers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/random_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_end_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_init_sync_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "fsync",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_min_apply_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_prefetch')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "try",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_action')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "pause",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_inclusive')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_lsn')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_name')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_time')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_timeline')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "latest",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recovery_target_xid')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/recursive_worktable_factor')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/remove_temp_files_after_crash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/require_secure_transport')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/reserved_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/restart_after_crash')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/restore_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/row_security')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/search_path')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "\"$user\", public",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/segment_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "131072",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/seq_page_cost')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/server_encoding')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "UTF8",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/server_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "16.4",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/server_version_num')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "160004",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/session_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/session_replication_role')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "origin",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/shared_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "32768",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/shared_memory_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "301",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/shared_memory_size_in_huge_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "151",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/shared_memory_type')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "mmap",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/shared_preload_libraries')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "pg_cron,pg_stat_statements",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_ca_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/ca.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_cert_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/cert.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_ciphers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_crl_dir')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_crl_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_dh_params_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_ecdh_curve')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "prime256v1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_key_file')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/datadrive/certs/key.pem",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_library')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "OpenSSL",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_max_protocol_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_min_protocol_version')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "TLSv1.2",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_passphrase_command')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_passphrase_command_supports_reload')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/ssl_prefer_server_ciphers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/standard_conforming_strings')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/statement_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/stats_fetch_consistency')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "cache",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/superuser_reserved_connections')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/synchronize_seqscans')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/synchronous_commit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/synchronous_standby_names')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/syslog_facility')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "local0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/syslog_ident')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "postgres",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/syslog_sequence_numbers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/syslog_split_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/tcp_keepalives_count')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "9",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/tcp_keepalives_idle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "120",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/tcp_keepalives_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "30",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/tcp_user_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/temp_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/temp_file_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "-1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/temp_tablespaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/TimeZone')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "UTC",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/timezone_abbreviations')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "Default",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/trace_notify')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/trace_recovery_messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "log",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/trace_sort')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_activities')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_activity_query_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1024",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_commit_timestamp')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_counts')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_functions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "none",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/track_wal_io_timing')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/transaction_deferrable')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/transaction_isolation')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "read committed",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/transaction_read_only')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/transform_null_equals')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/unix_socket_directories')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "/tmp,/tmp/tuning_sockets",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/unix_socket_group')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/unix_socket_permissions')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0777",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/update_process_title')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_buffer_usage_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "256",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_cost_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "0",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_cost_limit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_cost_page_dirty')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "20",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_cost_page_hit')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_cost_page_miss')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_failsafe_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1600000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "50000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_multixact_failsafe_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "1600000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_multixact_freeze_min_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/vacuum_multixact_freeze_table_age')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "150000000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_block_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "8192",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_buffers')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_compression')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_consistency_checking')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_decode_buffer_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "524288",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_init_zero')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_keep_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "400",
                "source": "user-override"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_level')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "replica",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_log_hints')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_receiver_create_temp_slot')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_receiver_status_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "10",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_receiver_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "60000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_recycle')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "on",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_retrieve_retry_interval')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "5000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_segment_size')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "16777216",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_sender_timeout')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "60000",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_skip_threshold')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "2048",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_sync_method')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "fdatasync",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_writer_delay')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "200",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/wal_writer_flush_after')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "128",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/work_mem')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "4096",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/xmlbinary')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "base64",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/xmloption')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "content",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/zero_damaged_pages')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "value": "off",
                "source": "system-default"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure_maintenance')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/azure_sys')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
            "apiVersion": "2023-12-01-preview",
            "name": "[concat(parameters('flexibleServers_psql_catalog_gwc_name'), '/postgres')]",
            "dependsOn": [
                "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('flexibleServers_psql_catalog_gwc_name'))]"
            ],
            "properties": {
                "charset": "UTF8",
                "collation": "en_US.utf8"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics",
            "apiVersion": "2024-06-01-preview",
            "name": "[parameters('systemTopics_abtstoragegwc_3093c45d_8dba_4b22_9432_0e1627fca917_name')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]",
                "topicType": "microsoft.storage.storageaccounts"
            }
        },
        {
            "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
            "apiVersion": "2024-06-01-preview",
            "name": "[concat(parameters('systemTopics_abtstoragegwc_3093c45d_8dba_4b22_9432_0e1627fca917_name'), '/StorageAntimalwareSubscription')]",
            "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', parameters('systemTopics_abtstoragegwc_3093c45d_8dba_4b22_9432_0e1627fca917_name'))]"
            ],
            "properties": {
                "destination": {
                    "properties": {
                        "maxEventsPerBatch": 1,
                        "preferredBatchSizeInKilobytes": 64,
                        "azureActiveDirectoryTenantId": "33e01921-4d64-4f8c-a055-5bdaffd5e33d",
                        "azureActiveDirectoryApplicationIdOrUri": "f1f8da5f-609a-401d-85b2-d498116b7265"
                    },
                    "endpointType": "WebHook"
                },
                "filter": {
                    "includedEventTypes": [
                        "Microsoft.Storage.BlobCreated"
                    ],
                    "advancedFilters": [
                        {
                            "values": [
                                "BlockBlob"
                            ],
                            "operatorType": "StringContains",
                            "key": "data.blobType"
                        }
                    ]
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                    "maxDeliveryAttempts": 30,
                    "eventTimeToLiveInMinutes": 1440
                }
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/degradationindependencyduration')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationindependencyduration",
                    "DisplayName": "Degradation in dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/degradationinserverresponsetime')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "degradationinserverresponsetime",
                    "DisplayName": "Degradation in server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/digestMailConfiguration')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "digestMailConfiguration",
                    "DisplayName": "Digest Mail Configuration",
                    "Description": "This rule describes the digest mail preferences",
                    "HelpUrl": "www.homail.com",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_billingdatavolumedailyspikeextension')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_billingdatavolumedailyspikeextension",
                    "DisplayName": "Abnormal rise in daily data volume (preview)",
                    "Description": "This detection rule automatically analyzes the billing data generated by your application, and can warn you about an unusual increase in your application's billing costs",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/billing-data-volume-daily-spike.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_canaryextension')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_canaryextension",
                    "DisplayName": "Canary extension",
                    "Description": "Canary extension",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/",
                    "IsHidden": true,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_exceptionchangeextension')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_exceptionchangeextension",
                    "DisplayName": "Abnormal rise in exception volume (preview)",
                    "Description": "This detection rule automatically analyzes the exceptions thrown in your application, and can warn you about unusual patterns in your exception telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/abnormal-rise-in-exception-volume.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_memoryleakextension')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_memoryleakextension",
                    "DisplayName": "Potential memory leak detected (preview)",
                    "Description": "This detection rule automatically analyzes the memory consumption of each process in your application, and can warn you about potential memory leaks or increased memory consumption.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/tree/master/SmartDetection/memory-leak.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_securityextensionspackage')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_securityextensionspackage",
                    "DisplayName": "Potential security issue detected (preview)",
                    "Description": "This detection rule automatically analyzes the telemetry generated by your application and detects potential security issues.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/application-security-detection-pack.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/extension_traceseveritydetector')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "extension_traceseveritydetector",
                    "DisplayName": "Degradation in trace severity ratio (preview)",
                    "Description": "This detection rule automatically analyzes the trace logs emitted from your application, and can warn you about unusual patterns in the severity of your trace telemetry.",
                    "HelpUrl": "https://github.com/Microsoft/ApplicationInsights-Home/blob/master/SmartDetection/degradation-in-trace-severity-ratio.md",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/longdependencyduration')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "longdependencyduration",
                    "DisplayName": "Long dependency duration",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/migrationToAlertRulesCompleted')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "migrationToAlertRulesCompleted",
                    "DisplayName": "Migration To Alert Rules Completed",
                    "Description": "A configuration that controls the migration state of Smart Detection to Smart Alerts",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": true,
                    "IsEnabledByDefault": false,
                    "IsInPreview": true,
                    "SupportsEmailNotifications": false
                },
                "enabled": false,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/slowpageloadtime')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowpageloadtime",
                    "DisplayName": "Slow page load time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "microsoft.insights/components/ProactiveDetectionConfigs",
            "apiVersion": "2018-05-01-preview",
            "name": "[concat(parameters('components_appi_eshopmicroservices_gwc_name'), '/slowserverresponsetime')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('microsoft.insights/components', parameters('components_appi_eshopmicroservices_gwc_name'))]"
            ],
            "properties": {
                "ruleDefinitions": {
                    "Name": "slowserverresponsetime",
                    "DisplayName": "Slow server response time",
                    "Description": "Smart Detection rules notify you of performance anomaly issues.",
                    "HelpUrl": "https://docs.microsoft.com/en-us/azure/application-insights/app-insights-proactive-performance-diagnostics",
                    "IsHidden": false,
                    "IsEnabledByDefault": true,
                    "IsInPreview": false,
                    "SupportsEmailNotifications": true
                },
                "enabled": true,
                "sendEmailsToSubscriptionOwners": true,
                "customEmails": []
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'), '/fb0afd72cb3c')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 30,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.8.4"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/A",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'), '/redis-basketapp-gwc.redis.cache.windows.net')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "aRecords": [
                    {
                        "ipv4Address": "10.0.9.5"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/SOA",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'), '/@')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "ttl": 3600,
                "soaRecord": {
                    "email": "azureprivatedns-host.microsoft.com",
                    "expireTime": 2419200,
                    "host": "azureprivatedns.net",
                    "minimumTtl": 10,
                    "refreshTime": 3600,
                    "retryTime": 300,
                    "serialNumber": 1
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.0.0/24"
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/default2')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.9.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-basket')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.1.0/24"
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-catalog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.3.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-discount')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.4.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-ordering')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.2.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-postgres-catalog')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.8.0/24"
                ],
                "serviceEndpoints": [
                    {
                        "service": "Microsoft.Storage",
                        "locations": [
                            "germanywestcentral",
                            "germanynorth"
                        ]
                    }
                ],
                "delegations": [
                    {
                        "name": "dlg-Microsoft.DBforPostgreSQL-flexibleServers",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-postgres-catalog'), '/delegations/dlg-Microsoft.DBforPostgreSQL-flexibleServers')]",
                        "properties": {
                            "serviceName": "Microsoft.DBforPostgreSQL/flexibleServers"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-sql')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.7.0/24"
                ],
                "delegations": [],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-webapp')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.5.0/24"
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-webapp'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), '/subnet-yarpapigateway')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "addressPrefixes": [
                    "10.0.6.0/24"
                ],
                "delegations": [
                    {
                        "name": "delegation",
                        "id": "[concat(resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-yarpapigateway'), '/delegations/delegation')]",
                        "properties": {
                            "serviceName": "Microsoft.Web/serverfarms"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets/delegations"
                    }
                ],
                "privateEndpointNetworkPolicies": "Disabled",
                "privateLinkServiceNetworkPolicies": "Enabled"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_abtstoragegwc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "containerDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                },
                "cors": {
                    "corsRules": []
                },
                "deleteRetentionPolicy": {
                    "allowPermanentDelete": false,
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_abtstoragegwc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "sku": {
                "name": "Standard_RAGRS",
                "tier": "Standard"
            },
            "properties": {
                "protocolSettings": {
                    "smb": {}
                },
                "cors": {
                    "corsRules": []
                },
                "shareDeleteRetentionPolicy": {
                    "enabled": true,
                    "days": 7
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/privateEndpointConnections",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_abtstoragegwc_name'), '/', parameters('storageAccounts_abtstoragegwc_name'), '.cc827def-ac3f-49d3-97b0-6d5c8923466b')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "properties": {
                "privateEndpoint": {},
                "privateLinkServiceConnectionState": {
                    "status": "Approved",
                    "description": "Auto-Approved",
                    "actionRequired": "None"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/queueServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_abtstoragegwc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/tableServices",
            "apiVersion": "2023-05-01",
            "name": "[concat(parameters('storageAccounts_abtstoragegwc_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]"
            ],
            "properties": {
                "cors": {
                    "corsRules": []
                }
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_discount_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_discount_gwc_name'), '-ckf9b5bme2hxeuhb.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_discount_gwc_name'), '-ckf9b5bme2hxeuhb.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-discount:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": true,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_ordering_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_ordering_gwc_name'), '-bveqa6hreda5byff.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_ordering_gwc_name'), '-bveqa6hreda5byff.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": false,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-ordering:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_catalog_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_catalog_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_discount_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_discount_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_ordering_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_ordering_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_webapp_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_webapp_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/ftp')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": false
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_catalog_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_catalog_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_discount_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_discount_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_ordering_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_ordering_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_webapp_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_webapp_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/basicPublishingCredentialsPolicies",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/scm')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "allow": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-basket:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-basket-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_subnet-basket",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "managedServiceIdentityId": 9274,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_catalog_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_catalog_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-catalog:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-catalog-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "ipSecurityRestrictionsDefaultAction": "Allow",
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsDefaultAction": "Allow",
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_discount_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_discount_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-discount:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-discount-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_ordering_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_ordering_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-ordering:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-ordering-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_webapp_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_webapp_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-webapp:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-webapp-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/web')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php",
                    "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-yarpapigateway:1.0.10",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "remoteDebuggingVersion": "VS2022",
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "$app-yarpapigateway-gwc",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetName": "1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default",
                "vnetRouteAllEnabled": true,
                "vnetPrivatePortsCount": 0,
                "publicNetworkAccess": "Enabled",
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "FtpsOnly",
                "preWarmedInstanceCount": 0,
                "elasticWebAppScaleLimit": 0,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 1,
                "azureStorageAccounts": {}
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/2276042da45f73247036429d53ca176b53f17f121732527529065')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"2276042da45f73247036429d53ca176b53f17f12\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T09:38:49.1705844Z",
                "end_time": "2024-11-25T09:38:49.1705844Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/2276042da45f73247036429d53ca176b53f17f121732527680414')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"2276042da45f73247036429d53ca176b53f17f12\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T09:41:20.5197722Z",
                "end_time": "2024-11-25T09:41:20.5197722Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/413a7d50bcd65d807ddb6d5aa7255d8e05ebf53b1732546144995')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"413a7d50bcd65d807ddb6d5aa7255d8e05ebf53b\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T14:49:05.2085926Z",
                "end_time": "2024-11-25T14:49:05.2085926Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/413a7d50bcd65d807ddb6d5aa7255d8e05ebf53b1732546252836')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"413a7d50bcd65d807ddb6d5aa7255d8e05ebf53b\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T14:50:53.468333Z",
                "end_time": "2024-11-25T14:50:53.468333Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/b60b143bb3c85688a09d8118927955b1316cc6dd1732540980277')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"b60b143bb3c85688a09d8118927955b1316cc6dd\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T13:23:00.6494313Z",
                "end_time": "2024-11-25T13:23:00.6494313Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/b60b143bb3c85688a09d8118927955b1316cc6dd1732541176834')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"b60b143bb3c85688a09d8118927955b1316cc6dd\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T13:26:17.1506073Z",
                "end_time": "2024-11-25T13:26:17.1506073Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/d343c04dc9cfce07873e6b005c9dcd03f3aa491c1732647214880')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"d343c04dc9cfce07873e6b005c9dcd03f3aa491c\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-26T18:53:35.056208Z",
                "end_time": "2024-11-26T18:53:35.056208Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/d343c04dc9cfce07873e6b005c9dcd03f3aa491c1732647576045')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"d343c04dc9cfce07873e6b005c9dcd03f3aa491c\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-26T18:59:36.379504Z",
                "end_time": "2024-11-26T18:59:36.379504Z",
                "active": true
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/dc4b99ffaf729f0c3307a4eee7fb287ffea482d21732541868851')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"dc4b99ffaf729f0c3307a4eee7fb287ffea482d2\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T13:37:48.9187289Z",
                "end_time": "2024-11-25T13:37:48.9187289Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/deployments",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/dc4b99ffaf729f0c3307a4eee7fb287ffea482d21732542002179')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "status": 4,
                "author": "AlbertoMitroi",
                "deployer": "GitHub",
                "message": "{\"type\":\"Deployment\",\"sha\":\"dc4b99ffaf729f0c3307a4eee7fb287ffea482d2\",\"repoName\":\"AlbertoMitroi/EShopMicroservices\",\"actor\":\"AlbertoMitroi\",\"slotName\":\"production\"}",
                "start_time": "2024-11-25T13:40:02.6759139Z",
                "end_time": "2024-11-25T13:40:02.6759139Z",
                "active": false
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/', parameters('sites_app_basket_gwc_name'), '-e3c3fheee9fhh5bg.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-basket-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_catalog_gwc_name'), '/', parameters('sites_app_catalog_gwc_name'), '-hpedbzdgdcgxafhh.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_catalog_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-catalog-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_discount_gwc_name'), '/', parameters('sites_app_discount_gwc_name'), '-ckf9b5bme2hxeuhb.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_discount_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-discount-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_ordering_gwc_name'), '/', parameters('sites_app_ordering_gwc_name'), '-bveqa6hreda5byff.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_ordering_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-ordering-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_webapp_gwc_name'), '/', parameters('sites_app_webapp_gwc_name'), '-ewbygycgeqhphgfz.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_webapp_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-webapp-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.Web/sites/hostNameBindings",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/', parameters('sites_app_yarpapigateway_gwc_name'), '-a4hdb6hya9fqarc0.germanywestcentral-01.azurewebsites.net')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]"
            ],
            "properties": {
                "siteName": "app-yarpapigateway-gwc",
                "hostNameType": "Verified"
            }
        },
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers",
            "apiVersion": "2023-12-01-preview",
            "name": "[parameters('flexibleServers_psql_catalog_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-postgres-catalog')]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
            ],
            "sku": {
                "name": "Standard_B1ms",
                "tier": "Burstable"
            },
            "properties": {
                "replica": {
                    "role": "Primary"
                },
                "storage": {
                    "iops": 120,
                    "tier": "P4",
                    "storageSizeGB": 32,
                    "autoGrow": "Disabled"
                },
                "network": {
                    "publicNetworkAccess": "Disabled",
                    "delegatedSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-postgres-catalog')]",
                    "privateDnsZoneArmResourceId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
                },
                "dataEncryption": {
                    "type": "SystemManaged"
                },
                "authConfig": {
                    "activeDirectoryAuth": "Enabled",
                    "passwordAuth": "Enabled",
                    "tenantId": "b71ce7b3-423a-4d7e-a270-e0f7cf2345fe"
                },
                "version": "16",
                "administratorLogin": "psqlcataloggwcadmin",
                "availabilityZone": "1",
                "backup": {
                    "backupRetentionDays": 7,
                    "geoRedundantBackup": "Disabled"
                },
                "highAvailability": {
                    "mode": "Disabled"
                },
                "maintenanceWindow": {
                    "customWindow": "Disabled",
                    "dayOfWeek": 0,
                    "startHour": 0,
                    "startMinute": 0
                },
                "replicationRole": "Primary"
            }
        },
        {
            "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
            "apiVersion": "2024-06-01",
            "name": "[concat(parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'), '/2wgfyxif6ufk4')]",
            "location": "global",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
            ],
            "properties": {
                "registrationEnabled": true,
                "virtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-01-01",
            "name": "[parameters('privateEndpoints_privateendpoint_blob_storage_name')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default2')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_privateendpoint_blob_storage_name'), '_7db45229-0b88-4ffd-8394-f93a3bdb801f')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_privateendpoint_blob_storage_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_privateendpoint_blob_storage_name'), '_7db45229-0b88-4ffd-8394-f93a3bdb801f'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccounts_abtstoragegwc_name'))]",
                            "groupIds": [
                                "blob"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default2')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                    {
                        "fqdn": "abtstoragegwc.blob.core.windows.net",
                        "ipAddresses": [
                            "10.0.9.4"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints",
            "apiVersion": "2024-01-01",
            "name": "[parameters('privateEndpoints_privateendpoint_redis_name')]",
            "location": "germanywestcentral",
            "dependsOn": [
                "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default2')]"
            ],
            "properties": {
                "privateLinkServiceConnections": [
                    {
                        "name": "[concat(parameters('privateEndpoints_privateendpoint_redis_name'), '_57abc481-7d5e-4f47-add8-4e02f9573015')]",
                        "id": "[concat(resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_privateendpoint_redis_name')), concat('/privateLinkServiceConnections/', parameters('privateEndpoints_privateendpoint_redis_name'), '_57abc481-7d5e-4f47-add8-4e02f9573015'))]",
                        "properties": {
                            "privateLinkServiceId": "[resourceId('Microsoft.Cache/Redis', parameters('Redis_redis_basketapp_gwc_name'))]",
                            "groupIds": [
                                "redisCache"
                            ],
                            "privateLinkServiceConnectionState": {
                                "status": "Approved",
                                "description": "Auto-Approved",
                                "actionsRequired": "None"
                            }
                        }
                    }
                ],
                "manualPrivateLinkServiceConnections": [],
                "subnet": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default2')]"
                },
                "ipConfigurations": [],
                "customDnsConfigs": [
                    {
                        "fqdn": "redis-basketapp-gwc.redis.cache.windows.net",
                        "ipAddresses": [
                            "10.0.9.5"
                        ]
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
            "apiVersion": "2024-01-01",
            "name": "[concat(parameters('privateEndpoints_privateendpoint_redis_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/privateEndpoints', parameters('privateEndpoints_privateendpoint_redis_name'))]",
                "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
            ],
            "properties": {
                "privateDnsZoneConfigs": [
                    {
                        "name": "redis-basket",
                        "properties": {
                            "privateDnsZoneId": "[resourceId('Microsoft.Network/privateDnsZones', parameters('privateDnsZones_psql_catalog_gwc_private_postgres_database_azure_com_name'))]"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_basket_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket')]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_basket_gwc_name'), '-e3c3fheee9fhh5bg.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_basket_gwc_name'), '-e3c3fheee9fhh5bg.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-basket:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket')]",
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_catalog_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_catalog_gwc_name'), '-hpedbzdgdcgxafhh.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_catalog_gwc_name'), '-hpedbzdgdcgxafhh.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-catalog:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_webapp_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_webapp_gwc_name'), '-ewbygycgeqhphgfz.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_webapp_gwc_name'), '-ewbygycgeqhphgfz.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-webapp:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('sites_app_yarpapigateway_gwc_name')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "tags": {
                "Owner": "Alberto"
            },
            "kind": "app,linux,container",
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '-a4hdb6hya9fqarc0.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '-a4hdb6hya9fqarc0.scm.germanywestcentral-01.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_asp_eshopmicroervices_gwc_001_name'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "dnsConfiguration": {},
                "vnetRouteAllEnabled": true,
                "vnetImagePullEnabled": false,
                "vnetContentShareEnabled": false,
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "linuxFxVersion": "DOCKER|docker.io/albertomitroienc/eshopmicroservices-yarpapigateway:1.0.10",
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 1
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "vnetBackupRestoreEnabled": false,
                "customDomainVerificationId": "A472F4D93135B1861620203AE461856050D66BECFA7A9945361736DD460988E7",
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None",
                "publicNetworkAccess": "Enabled",
                "storageAccountRequired": false,
                "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Web/sites/virtualNetworkConnections",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_catalog_gwc_name'), '/1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_catalog_gwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "properties": {
                "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "isSwift": true
            }
        },
        {
            "type": "Microsoft.Web/sites/virtualNetworkConnections",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_webapp_gwc_name'), '/1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_webapp_gwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "properties": {
                "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "isSwift": true
            }
        },
        {
            "type": "Microsoft.Web/sites/virtualNetworkConnections",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_yarpapigateway_gwc_name'), '/1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_default')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_yarpapigateway_gwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]"
            ],
            "properties": {
                "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'default')]",
                "isSwift": true
            }
        },
        {
            "type": "Microsoft.Web/sites/virtualNetworkConnections",
            "apiVersion": "2023-12-01",
            "name": "[concat(parameters('sites_app_basket_gwc_name'), '/1ff51a34-e5e0-4ee9-bece-4cf0622b35dc_subnet-basket')]",
            "location": "Germany West Central",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_app_basket_gwc_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket')]"
            ],
            "properties": {
                "vnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_vnet_eshopmicroservices16_gwc_name'), 'subnet-basket')]",
                "isSwift": true
            }
        }
    ]
}